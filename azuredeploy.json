{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of new Storage Accounts (Standard_LRS or Premium_LRS) to be created to store VM disks"
      },
      "defaultValue": "Premium_LRS"
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E32s_v3",
        "Standard_E64s_v3"
      ],
      "metadata": {
        "description": "Size of the SQL VMs to be created"
      },
      "defaultValue": "Standard_DS3_v2"
    },
    "sqlWitnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_D4s_v3"
      ],
      "metadata": {
        "description": "Size of the Witness VM to be created"
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "existingDomainNetbiosName": {
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "NETBIOS domain name for existing Active Directory domain"
      },
      "defaultValue": ""
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "A domain administrator username in the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the domain administrator account in the existing Active Directory Domain"
      }
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service domain account name"
      }
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service domain account password"
      }
    },
    "existingSqlVNetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the resource group that contains the existing VNet that will be associated with SQL resources. (Sometimes the VNet may be defined in a different resource group than where SQL resources will be deployed.)"
      }
    },
    "existingSqlVNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNet where SQL resources will be deployed."
      }
    },
    "existingSqlSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
      },
      "defaultValue": "default"
    },
    "existingAdPDCVMName": {
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Azure VM name of the existing Primary AD domain controller & DNS server"
      }
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of ILB for the SQL Server AlwaysOn listener to be created. Should be an available IP address in the specified SQL subnet."
      }
    },
    "namePrefix": {
      "type": "string",
      "maxLength": 8,
      "metadata": {
        "description": "Naming prefix. Optional; if not specified, an eight-character random prefix will be auto-generated."
      },
      "defaultValue": ""
    },

    "sqlWindowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "SQL image publisher."
      },
      "defaultValue": "MicrosoftSQLServer"
    },
    "sqlWindowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "SQL image offer."
      },
      "allowedValues": [
        "SQL2016-WS2012R2",
        "SQL2016SP1-WS2016"
      ],
      "defaultValue": "SQL2016SP1-WS2016"
    },
    "sqlWindowsImageSKU": {
      "type": "string",
      "metadata": {
        "description": "SQL SKU."
      },
      "allowedValues": [
          "Enterprise",
          "SQLDEV"
      ],
      "defaultValue": "SQLDEV"
    },
    "sqlWindowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of the SQL Windows image to use if other than latest."
      },
      "defaultValue": "latest"
    },

    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://armdscdev.blob.core.windows.net/deploy/master/sql-server-2016-alwayson-existing-vnet-and-ad-md"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access the artifacts Location. If the artifacts location is public, then no value is needed here."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "namePrefix": "[trim(substring(trim(concat(padleft(parameters('namePrefix'), 8, ' '), padleft(substring(uniquestring(deployment().name, parameters('sqlLBIPAddress')), 0, 8), 16, ' '))), 0, 8))]",
    "sqlSubnetRef": "[concat(resourceId(parameters('existingSqlVNetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingSqlVNetName')),'/subnets/',parameters('existingSqlSubnetName'))]",
    "deploySqlClusterTemplateURL": "[concat(parameters('_artifactsLocation'),'/nested/deploy-sql-cluster.json',parameters('_artifactsLocationSasToken'))]",
    "deploySqlCluster": "deploySqlCluster"
  },
  "resources": [
    {
      "name": "[variables('deploySqlCluster')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlClusterTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "domainName": {
            "value": "[parameters('existingDomainName')]"
          },
          "domainNetbiosName": {
            "value": "[parameters('existingDomainNetbiosName')]"
          },
          "dnsServerName": {
            "value": "[parameters('existingAdPDCVMName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "nicSubnetUri": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "lbSubnetUri": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "sqlWitnessVMSize": {
            "value": "[parameters('sqlWitnessVMSize')]"
          },

          "windowsImagePublisher": {
            "value": "[parameters('sqlWindowsImagePublisher')]"
          },
          "windowsImageOffer": {
            "value": "[parameters('sqlWindowsImageOffer')]"
          },
          "windowsImageSKU": {
            "value": "[parameters('sqlWindowsImageSKU')]"
          },
          "windowsImageVersion": {
            "value": "[parameters('sqlWindowsImageVersion')]"
          },

          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}